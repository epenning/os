To run qemu try using:
~~~~~~~~~~~

    qemu -nographic --serial mon:stdio -hdc kernel/kernel.img -hdd fat439/user.img -soundhw sb16
    qemu-system-x86_64 -nographic --serial mon:stdio -hdc kernel/kernel.img -hdd fat439/user.img -soundhw sb16
    
For gdb:
~~~~~~~~~~~

    qemu -S -s -nographic --serial mon:stdio -hdc kernel/kernel.img -hdd fat439/user.img -soundhw sb16
    qemu-system-x86_64 -S -s -nographic --serial mon:stdio -hdc kernel/kernel.img -hdd fat439/user.img -soundhw sb16

To compile:
~~~~~~~~~~~

    make

To run test:
~~~~~~~~~~~~

    make clean test

To make the output less noisy:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    make -s clean test

test.out contains the output from running the test
test.ok contains the expected output
test.diff contains the difference between the two (using diff)

To run by hand
~~~~~~~~~~~~~~

    make
    qemu -nographic --serial mon:stdio -hdc kernel/kernel.img -hdd fat439/user.img

To attach with gdb
~~~~~~~~~~~~~~~~~~

It's a good idea to change the -O3 to -O0 in common.mak if you want to debug
with gdb

    make
    qemu -S -s -nographic --serial mon:stdio -hdc kernel/kernel.img -hdd fat439/user.img

  then in another window

    > gdb kernel/kernel
    (gdb) target remote localhost:1234
    (gdb) # define breakpoint, etc
    (gdb) cont

Printing to the console:
~~~~~~~~~~~~~~~~~~~~~~~~

You might find Debug::printf(...) and Debug::panic(...) useful. Both are in
kernel/debug.cc

Process::trace(...) is another useful function. It includes information
about the process generating the output

